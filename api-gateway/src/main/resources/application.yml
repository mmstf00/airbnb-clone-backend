spring:
  application:
    name: api-gateway
  banner:
    location: classpath:banner.txt
  cloud:
    gateway:
      routes[0]:
        id: aggregator-service
        uri: lb://aggregator-service # API Gateway also acts as a LB
        predicates:
          - Path=/api/v1/aggregator/**, /api/v2/aggregator/**
      routes[1]:
        id: listing-service
        uri: lb://listing-service
        predicates[0]: Path=/api/v1/listings/**
      routes[2]:
        id: reservation-service
        uri: lb://reservation-service
        predicates[0]: Path=/api/v1/reservations/**
      routes[3]:
        id: user-service
        uri: lb://user-service
        predicates[0]: Path=/api/v1/users/**
      routes[4]:
        id: discovery-server
        uri: http://localhost:8761
        predicates[0]: Path=/eureka/web
        filters[0]: SetPath=/
      routes[5]:
        id: discovery-server-static
        uri: http://localhost:8761
        predicates[0]: Path=/eureka/**
  security:
    oauth2:
      resourceserver:
        jwt:
          # Spring Boot will read the openid configuration and will fetch
          # all the endpoints to make an authorization
          issuer-uri: http://localhost:8080/realms/spring-boot-microservices-realm

server:
  port: 8181

# Eureka client config
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

# Increase the logging level
logging:
  level:
    root: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionLocator: INFO
    org.springframework.cloud.gateway: TRACE